#!/usr/bin/env python
# coding: utf-8
# (c) 2021, Christoph Schmidt-Hieber
# See LICENSE

from PIL import Image
import numpy as np
import os
import argparse


def invert(imgrgb):
    # See https://forum.image.sc/t/invert-rgb-image-without-changing-colors/33571/2
    imgrel = imgrgb.copy()
    imgrel[:,:,0] = 255-np.round(
        (imgrgb[:,:,1].astype(float)+imgrgb[:,:,2].astype(float))/2.0)
    imgrel[:,:,1] = 255-np.round(
        (imgrgb[:,:,0].astype(float)+imgrgb[:,:,2].astype(float))/2.0)
    imgrel[:,:,2] = 255-np.round(
        (imgrgb[:,:,0].astype(float)+imgrgb[:,:,1].astype(float))/2.0)

    return imgrel


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "input", help="Name of the file that you want to convert")
    parser.add_argument(
        "-o", "--output", type=str, help="Name of the output file (optional)")
    args = parser.parse_args()

    if not os.path.exists(args.input):
        print("Could not find " + args.input)
        exit(0)

    if args.output is None:
        filetrunk, newfn_ext = os.path.splitext(args.input)
        newfn = filetrunk + "_darkmode" + newfn_ext
        nt = 1
        while os.path.exists(newfn):
            newfn = filetrunk + "_darkmode{0}".format(nt) + newfn_ext
            nt += 1
        print("Writing to " + newfn)
    else:
        newfn = args.output

    img = Image.open(args.input)
    invnp = invert(np.array(img))
    inv = Image.fromarray(invnp, mode=img.mode)
    inv.save(newfn)
